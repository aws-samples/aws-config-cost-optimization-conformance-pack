name: Release

on:
  push:
    branches:
      - main

jobs:

  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build
        run: |
          python ./build/config_function.py
          python ./build/conformance_pack.py
          python ./build/stackset.py
          python ./build/template.py

      - name: Install Rain
        run: |
          gh release download --repo aws-cloudformation/rain --pattern "*_linux-amd64.zip" --output "rain.zip"
          unzip -j "rain.zip" "*/rain"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package
        run: |
          ./rain pkg stackset-build.yaml --output stackset-pkg.yaml
          ./rain pkg template-build.yaml --output main.yaml

      - name: Create Release
        id: create_release
        run: |
          gh release create ${{ github.run_number }} --title "Release v${{ github.run_number }}" --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        id: upload-release-asset
        run: |
          cp main.yaml template.yaml
          gh release upload ${{ github.run_number }} template.yaml
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
